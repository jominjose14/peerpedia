spring:
  application:
    name: peerpedia
  datasource:
    url: jdbc:postgresql://${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 10
      idle-timeout: 300000 # 5 mins = 5 * 60 * 1000
      connection-timeout: 30000 # 30 sec = 30 * 1000
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  cache:
    type: ${CACHE_TYPE}
  jpa:
    hibernate:
      ddl-auto: update # other values: create, create-drop, none
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true

logging:
  file:
    name: ./logs/server.log
#  level:
#    org.springframework.web: DEBUG
#    org.springframework.security: DEBUG
#    org.springframework.web.filter: TRACE
#    org.springframework.web.servlet.DispatcherServlet: DEBUG
#    org.springframework.web.cors: DEBUG

server:
  servlet:
    context-path: /api

app:
  jwt:
    secret: ${JWT_SECRET}
    expiration-in-ms: 86400000 # 1 day = 24 * 60 * 60 * 1000
  webclient-cors:
    enable: ${ENABLE_WEBCLIENT_CORS}
    domain: ${WEBCLIENT_CORS_DOMAIN}
  admin:
    password: ${ADMIN_PASSWORD}
  population:
    user-include-count: ${USER_INCLUDE_COUNT}